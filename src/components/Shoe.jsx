/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 .\public\models\nike-air-zoom-pegasus-36.glb 
Author: quaz30 (https://sketchfab.com/quaz30)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/nike-air-zoom-pegasus-36-00fd99e778c244c3bd3b65f99dad7cb2
Title: Nike Air Zoom Pegasus 36
*/

import { useGLTF, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { gsap } from "gsap";
import { useLayoutEffect, useRef } from "react";

export function Shoe(props) {
  const ref = useRef();
  const scroll = useScroll();
  const tl = useRef();
  const { nodes, materials } = useGLTF("./models/nike-air-zoom-pegasus-36.glb");

  useFrame((state, delta) => {
    const t = state.clock.getElapsedTime();
    // ref.current.rotation.set(
    //   Math.cos(t / 4) / 8,
    //   Math.sin(t / 3) / 4,
    //   0.15 + Math.sin(t / 2) / 8
    // );
    tl.current.seek(scroll.offset * tl.current.duration());
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline({
      defaults: { duration: 2, ease: "power1.inOut" },
    });

    tl.current
      .to(ref.current.position, { y: 0 }, 0)
      .to(ref.current.rotation, { y: 0 }, 0);

    tl.current
      .to(ref.current.position, { x: 0.7 }, 3)
      .to(ref.current.rotation, { y: 2.2, x: 0, z: 0.2 }, 3);

    tl.current
      .to(ref.current.position, { x: 0 }, 13)
      .to(ref.current.rotation, { y: 0.5, x: 0.5, z: 0.4 }, 13);
  }, []);
  return (
    <group ref={ref}>
      <mesh
        receiveShadow
        castShadow
        geometry={nodes.defaultMaterial.geometry}
        material={materials.NikeShoe}
        {...props}
      />
    </group>
  );
}

useGLTF.preload("./models/nike-air-zoom-pegasus-36.glb");
